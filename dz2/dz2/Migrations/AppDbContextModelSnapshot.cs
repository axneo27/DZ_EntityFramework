// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dz2;

#nullable disable

namespace dz2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("dz2.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Credits = 3,
                            Description = "An introduction to calculus.",
                            TeacherId = 1,
                            Title = "Calculus"
                        },
                        new
                        {
                            Id = 2,
                            Credits = 4,
                            Description = "Fundamentals of physics.",
                            TeacherId = 2,
                            Title = "Physics I"
                        },
                        new
                        {
                            Id = 3,
                            Credits = 3,
                            Description = "Basic principles of chemistry.",
                            TeacherId = 1,
                            Title = "Chemistry"
                        },
                        new
                        {
                            Id = 4,
                            Credits = 3,
                            Description = "Introduction to biology.",
                            TeacherId = 2,
                            Title = "Biology"
                        });
                });

            modelBuilder.Entity("dz2.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentCardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentCardId")
                        .IsUnique();

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alice Johnson",
                            StudentCardId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bob Brown",
                            StudentCardId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Charlie Davis",
                            StudentCardId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Diana Evans",
                            StudentCardId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ethan Green",
                            StudentCardId = 5
                        });
                });

            modelBuilder.Entity("dz2.Entities.StudentCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StudentCards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardNumber = "SC12345",
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CardNumber = "SC67890",
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            CardNumber = "SC11223",
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            CardNumber = "SC44556",
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 4
                        },
                        new
                        {
                            Id = 5,
                            CardNumber = "SC78901",
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("dz2.Entities.StudentsCourses", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentsCourses");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 3
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 4
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 1,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 3
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 4
                        });
                });

            modelBuilder.Entity("dz2.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Doe",
                            Subject = "Mathematics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Smith",
                            Subject = "Physics"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("dz2.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dz2.Entities.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dz2.Entities.Course", b =>
                {
                    b.HasOne("dz2.Entities.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("dz2.Entities.Student", b =>
                {
                    b.HasOne("dz2.Entities.StudentCard", "StudentCard")
                        .WithOne("Student")
                        .HasForeignKey("dz2.Entities.Student", "StudentCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentCard");
                });

            modelBuilder.Entity("dz2.Entities.StudentsCourses", b =>
                {
                    b.HasOne("dz2.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dz2.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("dz2.Entities.StudentCard", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("dz2.Entities.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
